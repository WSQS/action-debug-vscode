name: 'Debugging with vscode'
description: 'Debug your GitHub Actions by Accessing via Browser based VS Code'
branding:
  icon: terminal
  color: 'black'
author: 'Fawaz Ahmed'

# Define your inputs here.
inputs:
  token:
    description: 'Set token to access the VS Code. Default value is root'
    required: false
    default: 'root'

# Define your inputs here.
runs:
  using: "composite"
  steps:

    - name: Install dependencies and run commands in windows
      if: ${{ contains(runner.os, 'windows') }}
      shell: bash
      run: |
        urlpart=`node -e "console.log(process.arch)"`
        curl -Lk "https://update.code.visualstudio.com/latest/cli-win32-$urlpart/stable" --output code.zip
        7z x -y code.zip
        mv code.exe ..
        rm -rf code.zip
        curl -f -L -o ../cloudflared.exe https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe
        ../code.exe serve-web --port 8391 --connection-token "${{ inputs.token }}" 1> /dev/null 2>&1 &
        ../cloudflared.exe tunnel --url http://localhost:8391 > ../mylog.txt 2>&1 &

    - name: Install dependencies and run commands in linux
      if: ${{ contains(runner.os, 'linux') }}
      shell: bash
      run: |
        sudo apt-get update -y
        wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-`dpkg --print-architecture`.deb
        sudo apt install -y ./cloudflared-linux-`dpkg --print-architecture`.deb
        rm ./cloudflared-linux-`dpkg --print-architecture`.deb
        
        urlpart=`node -e "process.arch == 'arm' ? console.log('armhf') : console.log(process.arch)"`
        # curl -Lk "https://update.code.visualstudio.com/latest/cli-linux-$urlpart/stable" --output code.tar.gz
        # tar -xvzf code.tar.gz -C ../
        # rm -rf code.tar.gz
        # chmod 777 ../code
        # ../code serve-web --port 8391 --connection-token ${{ inputs.token }} 1> /dev/null 2>&1  &
        echo "code code/add-microsoft-repo boolean true" | sudo debconf-set-selections
        sudo apt-get install wget gpg
        wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
        sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
        echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" |sudo tee /etc/apt/sources.list.d/vscode.list > /dev/null
        rm -f packages.microsoft.gpg
        sudo apt install apt-transport-https
        sudo apt update
        sudo apt install -y code
        code --install-extension ms-vscode.cpptools-extension-pack
        code --install-extension ms-vscode.makefile-tools
        code serve-web --port 8391 --connection-token ${{ inputs.token }} --extensions-dir ~/.vscode/extensions 1> /dev/null 2>&1  &
        cloudflared tunnel --url http://localhost:8391 > ../mylog.txt 2>&1 &

    - name: Install dependencies and run commands in macOS
      if: ${{ contains(runner.os, 'macos') }}
      shell: bash
      run: |
        [[ `uname -m` = arm64 ]] && archval="arm64" || archval="amd64"
        wget -O ../file.tgz https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-darwin-$archval.tgz
        tar -xvzf ../file.tgz -C ../
        chmod 777 ../cloudflared

        urlpart=`node -e "console.log(process.arch)"`
        curl -Lk "https://update.code.visualstudio.com/latest/cli-darwin-$urlpart/stable" --output code.zip
        7z x -y code.zip
        mv code ..
        rm -rf code.zip
        chmod 777 ../code
        ../code serve-web --port 8391 --connection-token ${{ inputs.token }} 1> /dev/null 2>&1  &
        ../cloudflared tunnel --url http://localhost:8391 > ../mylog.txt 2>&1 &

    - name: Install extension
      shell: bash
      run: |
        code --install-extension ms-vscode.cpptools ms-vscode.makefile-tools


    - name: Get Script
      shell: bash
      run: |
        curl -f -L -o ../print-path.js https://cdn.jsdelivr.net/gh/fawazahmed0/action-debug-vscode@main/print-path.js
        

    - name: wait for continue file to exist
      shell: bash
      run: |
        while [ ! -f ./continue ]; do sleep 5; echo `node ../print-path.js`; done
